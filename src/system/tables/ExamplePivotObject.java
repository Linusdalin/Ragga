package system.tables;

import dataRepresentation.*;
import databaseLayer.DBKeyInterface;
import pukkaBO.exceptions.BackOfficeException;
import pukkaBO.condition.*;

/********************************************************
 *
 *    ExamplePivotObject - Data Object
 *    Automatically generated file by GenerateTable.java
 *
 *
 */

public class ExamplePivotObject extends DataObject implements DataObjectInterface{



    private static final DataTableInterface TABLE = (DataTableInterface) new ExamplePivotObjectTable();

    public ExamplePivotObject(){

        super();         if(table == null)
            table = TABLE;
    }

    public ExamplePivotObject(String name, String country, String comission, DataObjectInterface make) throws BackOfficeException{

        this(name, country, comission, make.getKey());
    }


    public ExamplePivotObject(String name, String country, String comission, DBKeyInterface make) throws BackOfficeException{

        this();
        ColumnStructureInterface[] columns = getColumnFromTable();


        data = new ColumnDataInterface[columns.length + 1];

        data[0] = new StringData(name);
        data[1] = new StringData(country);
        data[2] = new DateData(comission);
        data[3] = new ReferenceData(make, columns[3].getTableReference());

        data[4] = new IntData( 0 ); // Set id
        exists = true;


    }
    /*********************************************************************''
     *
     *          Load from database
     *
     * @param condition - the SQL condition for selecting ONE UNIQUE object
     */

    public ExamplePivotObject(ConditionInterface condition){

        this();

        try{
            exists = load(condition);

        }catch(BackOfficeException e){

            System.out.println("Error loading object from database" + e.narration);
            e.printStackTrace();
        }

    }

    public DataObjectInterface createNew(ColumnDataInterface[] data ) throws BackOfficeException {

        return new ExamplePivotObject(data[0].getStringValue(), data[1].getStringValue(), data[2].getStringValue(), data[3].getRefValue());
    }

    public String getName(){

        StringData data = (StringData) this.data[0];
        return data.getStringValue();
    }

    public void setName(String name){

        StringData data = (StringData) this.data[0];
        data.setStringValue(name);
    }



    public String getCountry(){

        StringData data = (StringData) this.data[1];
        return data.getStringValue();
    }

    public void setCountry(String country){

        StringData data = (StringData) this.data[1];
        data.setStringValue(country);
    }



    public DBTimeStamp getComission()throws BackOfficeException{

        DateData data = (DateData) this.data[2];
        return new DBTimeStamp(DBTimeStamp.ISO_DATE, data.value);
    }

    public void setComission(DBTimeStamp comission){

        DateData data = (DateData) this.data[2];
        data.value = comission.getISODate().toString();
    }



    public DBKeyInterface getMakeId(){

        ReferenceData data = (ReferenceData)this.data[3];
        return data.value;
    }

    public ExamplePivotSecondary getMake(){

        ReferenceData data = (ReferenceData)this.data[3];
        return new ExamplePivotSecondary(new LookupByKey(data.value));
    }

    public void setMake(DBKeyInterface make){

        ReferenceData data = (ReferenceData)this.data[3];
        data.value = make;
    }




    /* Code below this point will not be replaced when regenerating the file*/

    /*__endAutoGenerated*/



}
